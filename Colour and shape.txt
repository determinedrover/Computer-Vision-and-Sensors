import cv2
import numpy as np 
cap = cv2.VideoCapture(0)
cap.set(cv2.CAP_PROP_FRAME_WIDTH,1280)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT,720)

while True:
    _, frame = cap.read()
    output = frame.copy()
    hsv_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    cv2.imshow("Frame",frame)
    height, width, _ = frame.shape    
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    gray = cv2.GaussianBlur(gray,(5,5),0);
    gray = cv2.medianBlur(gray,5)
    gray = cv2.adaptiveThreshold(gray,255,cv2.ADAPTIVE_THRESH_GAUSSIAN_C,\
            cv2.THRESH_BINARY,11,3.5)
            
    kernel = np.ones((2,2),np.uint8)
    gray = cv2.erode(gray,kernel,iterations = 1)
	# gray = erosion
     
    gray = cv2.dilate(gray,kernel,iterations = 1)
	# gray = dilation
     
    circles = cv2.HoughCircles(gray, 
                   cv2.HOUGH_GRADIENT, 1, 20, param1 = 40,
               param2 = 30, minRadius = 10, maxRadius = 30)
               
    if circles is not None:
        circles = np.round(circles[0, :]).astype("int")
        for (x, y, r) in circles:

            cv2.rectangle(output, (x - 5, y - 5), (x + 5, y + 5), (0, 128, 255), -1)
            cv2.circle(output,(x,y),r,(255,0,0), 4)
            cx = x 
            cy = y
            pixel_center = hsv_frame[cy,cx]
            hue_value = pixel_center[0]
            colour = "UNDEFINED"
            if(hue_value >= 22 and hue_value < 33):
                colour = "YELLOW"
            cv2.putText(output, colour, (10,50), 0, 1, (255,0,0), 2)
            cv2.circle(output,(cx,cy),5,(255,0,0), 3)

            print ("Coordinates of centre: ")
            print(x,y)
            cx = x 
            cy = y
		# print ("Radius is: ")
		# print (maxr)

    # cv2.imshow("Frame",frame)
    cv2.imshow("Frame",output)

    key = cv2.waitKey(1)
    if key == 27 or key == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
